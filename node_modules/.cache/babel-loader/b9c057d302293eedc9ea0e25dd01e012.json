{"ast":null,"code":"var _jsxFileName = \"/home/ben/nc_/tests/smstests/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport Header from './components/Header';\nimport TimeDisplay from './components/TimeDisplay';\nimport Location from './components/Location';\nimport JourneyInput from './components/JourneyInput';\nimport StopOrSnooze from './components/StopOrSnooze';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [location, setLocation] = useState('53째 23\\' 36\" N, -2째 33\\' 42\" E');\n  const [duration, setDuration] = useState(120000); // 120 seconds for testing\n\n  const [remaining, setRemaining] = useState(duration);\n  const [complete, setComplete] = useState(null); //null, not started.  false, journey in progress... poll location and check timer.  true, send completion message.\n\n  const [alert, setAlert] = useState(); //  numerical alert status 0-4ish.\n  //  0 no alert.\n  //  1 alert user timer 1 is running low.\n  //  2 inform user and contact that timer 1 has expired\n  //  3 send user location to contact\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Location, {\n      location: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(TimeDisplay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(JourneyInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StopOrSnooze, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"kTrZE2fUuaVP+TwDBJWEAjLt//M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ben/nc_/tests/smstests/src/App.js"],"names":["React","useState","Header","TimeDisplay","Location","JourneyInput","StopOrSnooze","App","location","setLocation","duration","setDuration","remaining","setRemaining","complete","setComplete","alert","setAlert"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,gCAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,MAAD,CAAxC,CAFc,CAEoC;;AAElD,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAACS,QAAD,CAA1C;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,IAAD,CAAxC,CALc,CAMd;;AAEA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,EAAlC,CARc,CASd;AACA;AACA;AACA;AACA;;AAEA,sBACC;AAAA,4BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEO;AAApB;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YALD;AAAA,kBADD;AASA;;GAxBQD,G;;KAAAA,G;AA0BT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport Header from './components/Header';\nimport TimeDisplay from './components/TimeDisplay';\nimport Location from './components/Location';\nimport JourneyInput from './components/JourneyInput';\nimport StopOrSnooze from './components/StopOrSnooze';\n\nfunction App() {\n\tconst [location, setLocation] = useState('53째 23\\' 36\" N, -2째 33\\' 42\" E');\n\tconst [duration, setDuration] = useState(120000); // 120 seconds for testing\n\n\tconst [remaining, setRemaining] = useState(duration);\n\tconst [complete, setComplete] = useState(null);\n\t//null, not started.  false, journey in progress... poll location and check timer.  true, send completion message.\n\n\tconst [alert, setAlert] = useState();\n\t//  numerical alert status 0-4ish.\n\t//  0 no alert.\n\t//  1 alert user timer 1 is running low.\n\t//  2 inform user and contact that timer 1 has expired\n\t//  3 send user location to contact\n\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<Location location={location} />\n\t\t\t<TimeDisplay />\n\t\t\t<JourneyInput />\n\t\t\t<StopOrSnooze />\n\t\t</>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}